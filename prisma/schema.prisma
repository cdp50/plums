datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Tag {
  id       String    @id @default(auto()) @map("_id") @db.ObjectId
  name    String
  description     String?
  image     String?
  author   User      @relation(fields: [authorId], references: [id], onDelete: Cascade)
  authorId String    @db.ObjectId
  noteIDs String[]   @db.ObjectId
  notes  Note[] @relation(fields: [noteIDs], references: [id])
}

model User {
  id      String   @id @default(auto()) @map("_id") @db.ObjectId
  email   String   @unique
  name    String?
  tags   Tag[]
  notes Note[]
}

model Note {            
  id      String @id @default(auto()) @map("_id") @db.ObjectId
  title String
  content String
  tagIds  String[] @db.ObjectId
  tags Tag[]   @relation(fields: [tagIds], references: [id])
  author   User      @relation(fields: [authorId], references: [id], onDelete: Cascade)
  authorId String    @db.ObjectId
  images Image[]
  files File[]
  urls Url[]
}


model Image {
  id      String @id @default(auto()) @map("_id") @db.ObjectId
  note   Note      @relation(fields: [noteId], references: [id], onDelete: Cascade)
  noteId String    @db.ObjectId
  image String
  description String?
}

model File {
  id      String @id @default(auto()) @map("_id") @db.ObjectId
  note   Note      @relation(fields: [noteId], references: [id], onDelete: Cascade)
  noteId String    @db.ObjectId
  file String
  description String?
}

model Url {
  id      String @id @default(auto()) @map("_id") @db.ObjectId
  note   Note      @relation(fields: [noteId], references: [id], onDelete: Cascade)
  noteId String    @db.ObjectId
  url String
  description String?
}


// interface note{
//   id: string
//   title: string
//   content: string
//   tagIds: string[]
//   authorId: string
//   images: images
//   files: files
//   urls: urls
// }
// interface images{
//   id: string
//   noteId: string
//   image: string
//   description: string
// }
// interface files{
//   id: string
//   noteId: string
//   file: string
//   description: string
// }
// interface urls{
//   id: string
//   noteId: string
//   url: string
//   description: string
// }
// interface notes{
//   note: note[]
// }

